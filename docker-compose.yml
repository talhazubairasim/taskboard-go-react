version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: taskboard-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: taskboard
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/internal/database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - taskboard-network

  redis:
    image: redis:7-alpine
    container_name: taskboard-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - taskboard-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskboard-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/taskboard?sslmode=disable
      REDIS_URL: redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-this-in-production}
      PORT: 8080
      ENV: development
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - taskboard-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: taskboard-frontend
    environment:
      VITE_GRAPHQL_HTTP_URL: http://localhost:8080/query
      VITE_GRAPHQL_WS_URL: ws://localhost:8080/query
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - taskboard-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  taskboard-network:
    driver: bridge